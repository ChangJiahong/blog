<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 第一种mybatis逆向生成xml配置 -->
<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="application-defult.properties" />

    <!-- 一个数据库一个context -->
    <context id="sqlserverTables" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!-- 生成的mapper，将implements MyMapper-->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="com.cjh.blog.utils.MyMapper"/>
        </plugin>
        <!-- 生成的pojo，将implements Serializable-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>

        <!--注释-->
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!-- 数据库链接URL、用户名、密码 -->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}">
        </jdbcConnection>

        <!--
        默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
        -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--
        生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，
        也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下
        -->
        <!--<javaModelGenerator targetPackage="com.joey.mybaties.test.pojo" targetProject="MAVEN">-->
        <!-- 对于生成的pojo所在包 -->
        <javaModelGenerator targetPackage="com.cjh.blog.pojo" targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格  -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--对应的mapper.xml文件  -->
        <!-- 对于生成的mapper所在目录 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="./src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 对应的Mapper接口类文件 -->
        <!-- 配置mapper对应的java映射 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.cjh.blog.mapper" targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>


        <!-- 列出要生成代码的所有表，这里配置的是不生成Example文件 -->
        <!--<table tableName="user_t" domainObjectName="UserInfo"-->
               <!--enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="false" >-->
            <!--<property name="useActualColumnNames" value="false"/>-->
        <!--</table>-->

        <!--生成实例的表-->

        <table tableName="t_attach"></table>
        <table tableName="t_comments"></table>
        <table tableName="t_contents"></table>
        <table tableName="t_logs"></table>
        <table tableName="t_metas"></table>
        <table tableName="t_options"></table>
        <table tableName="t_relationships"></table>
        <table tableName="t_users"></table>


    </context>
</generatorConfiguration>